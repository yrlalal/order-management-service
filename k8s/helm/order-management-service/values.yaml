# Default values for order-management-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: public.ecr.aws/q4w0a9y1/order-management-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "7a5e1864c300e7d0183803d683ff80c886d3ba57"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  "name": "order-management-service-pod"
podLabels:
  "name": "order-management-service-pod"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8080
  targetPort: 8080
  nodePort: 31515

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 300m
     memory: 512Mi
   requests:
     cpu: 300m
     memory: 512Mi

livenessProbe:
  initialDelaySeconds: 180
  httpGet:
    path: /actuator/health
    port: http
readinessProbe:
  initialDelaySeconds: 180
  httpGet:
    path: /actuator/health
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}


postgres:
  enabled: true

postgresql:
  image:
    debug: true
  auth:
    postgresPassword: "postgres"
    username: "testuser"
    password: "testpass"
    database: "orderDB"
  primary:
    service:
      type: "NodePort"
      nodePorts:
        postgresql: 32322
    livenessProbe:
      initialDelaySeconds: 60
    readinessProbe:
      initialDelaySeconds: 60


envMap:
  SPRING_DATASOURCE_URL: "jdbc:postgresql://192.168.65.3:32322/orderDB"
  SPRING_DATASOURCE_USERNAME: "testuser"
  SPRING_DATASOURCE_PASSWORD: "testpass"
